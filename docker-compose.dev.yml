version: '3.8'

# Development override for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  # Development API with hot reload
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: docmgr-api-dev
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - DEBUG_MODE=true
      - LOG_LEVEL=DEBUG
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    volumes:
      # Mount source code for hot reload
      - ./backend/src:/app/src:ro
      - ./backend/build.gradle:/app/build.gradle:ro
      # Volume for uploads and temp (development)
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    ports:
      - "3000:3000"
      - "5005:5005"  # JVM debug port
    command: >
      sh -c "
        echo 'Starting development server with hot reload...' &&
        ./gradlew bootRun --no-daemon
      "

  # Expose database port for development tools
  database:
    ports:
      - "5432:5432"

  # Expose Redis port for development tools
  redis:
    ports:
      - "6379:6379"

  # Add pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: docmgr-pgadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@docmgr.local
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - docmgr-network

  # Redis Commander for Redis management (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: docmgr-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - docmgr-network

volumes:
  pgadmin_data:
    driver: local